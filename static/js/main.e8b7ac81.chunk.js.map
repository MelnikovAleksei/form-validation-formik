{"version":3,"sources":["index.js"],"names":["TextInput","label","props","useField","field","meta","htmlFor","id","name","touched","error","TextareaInput","CheckboxInput","children","type","SelectInput","SignupForm","initialValues","firstName","lastName","email","url","text","color","acceptedTerms","validationSchema","Yup","min","max","required","oneOf","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","onReset","placeholder","value","disabled","Formik","isSubmitting","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e8b7ac81.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Formik, Form, useField } from \"formik\";\nimport * as Yup from 'yup';\nimport \"./styles.css\";\n\nconst defaultFirstName = 'Ivan';\nconst defaultLastName = 'Ivanov';\nconst defaultEmail = 'ivan.ivanov@domain.abc';\nconst defaultUrl = 'https://example.domain';\nconst defaultText = 'Your text here';\n\nconst TextInput = ({ label, ...props }) => {\n\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input {...field} {...props}/>\n      {meta.touched && meta.error ?\n        <div>{meta.error}</div>\n      :\n        null\n      }\n    </>\n  )\n}\n\nconst TextareaInput = ({ label, ...props }) => {\n\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <textarea {...field} {...props}/>\n      {meta.touched && meta.error ?\n        <div>{meta.error}</div>\n      :\n        null\n      }\n    </>\n  )\n}\n\nconst CheckboxInput = ({ children, ...props }) => {\n\n  const [field, meta] = useField({ ...props, type: 'checkbox' });\n\n  return (\n    <>\n      <label>\n        <input type=\"checkbox\" {...field} {...props}/>\n        {children}\n      </label>\n      {meta.touched && meta.error ?\n        <div>{meta.error}</div>\n      :\n        null\n      }\n    </>\n  )\n}\n\nconst SelectInput = ({ label, ...props }) => {\n\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <select {...field} {...props}/>\n      {meta.touched && meta.error ?\n        <div>{meta.error}</div>\n      :\n        null\n      }\n    </>\n  )\n}\n\nconst SignupForm = () => {\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        url: '',\n        text: '',\n        color: '',\n        acceptedTerms: false\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string()\n          .min(1, 'Must be 1 character or more')\n          .max(20, 'Must be 20 characters or less')\n          .required('Required'),\n        lastName: Yup.string()\n          .min(1, 'Must be 1 character or more')\n          .max(20, 'Must be 20 characters or less')\n          .required('Required'),\n        email: Yup.string()\n          .email('Invalid email')\n          .required('Required'),\n        url: Yup.string()\n          .url('Invalid url')\n          .required('Required'),\n        text: Yup.string()\n          .min(2, 'Must be 2 character or more')\n          .required('Required'),\n        color: Yup.string()\n          .oneOf(['red', 'blue', 'green'], 'Invalid color')\n          .required('Required'),\n        acceptedTerms: Yup.boolean()\n          .required('Required')\n          .oneOf([true], 'You must accept the terms and conditions.'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n      onReset={() => {\n        setTimeout(() => {\n          alert('Reset');\n        }, 400);\n      }}\n    >\n      <Form>\n        <TextInput\n          label=\"First Name\"\n          name=\"firstName\"\n          type=\"text\"\n          placeholder={defaultFirstName}\n        />\n\n        <TextInput\n          label=\"Last Name\"\n          name=\"lastName\"\n          type=\"text\"\n          placeholder={defaultLastName}\n        />\n\n        <TextInput\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder={defaultEmail}\n        />\n\n        <TextInput\n          label=\"URL\"\n          name=\"url\"\n          type=\"url\"\n          placeholder={defaultUrl}\n        />\n\n        <TextareaInput\n          label=\"Text\"\n          name=\"text\"\n          placeholder={defaultText}\n        />\n\n        <CheckboxInput\n          name=\"acceptedTerms\"\n        >\n          I accept the terms and conditions\n        </CheckboxInput>\n\n        <SelectInput\n          label=\"Your color\"\n          name=\"color\"\n        >\n          <option value=\"\"></option>\n          <option value=\"red\">Red</option>\n          <option value=\"green\">Green</option>\n          <option value=\"blue\">Blue</option>\n        </SelectInput>\n\n        <button\n          type=\"submit\"\n          disabled={Formik.isSubmitting}\n        >\n          Submit\n        </button>\n        <button\n          type=\"reset\"\n        >\n          Reset\n        </button>\n      </Form>\n    </Formik>\n  )\n};\n\nfunction App() {\n  return <SignupForm />;\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}